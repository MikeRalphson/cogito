#!/usr/bin/env bash
#
# Make a log of changes in a GIT branch.
# Copyright (c) Petr Baudis, 2005.
# Copyright (c) David Woodhouse, 2005.
#
# Takes a -c option to add color to the output.
# Currently, the colors are:
#
#	header		Green	
#	author 		Cyan
#	committer	Magenta
#	files		Blue
#	signoff		Yellow
#
# Takes an -f option to list which files was changed.
#
# Takes an id resolving to a commit to start from (HEAD by default),
# or id1:id2 representing an (id1;id2] range of commits to show.

. cg-Xlib

if [ "$1" = "-c" ]; then
	shift
	# See terminfo(5), "Color Handling"
	colheader="$(tput setaf 2)"    # Green
	colauthor="$(tput setaf 6)"    # Cyan
	colcommitter="$(tput setaf 5)" # Magenta
	colfiles="$(tput setaf 4)"     # Blue
	colsignoff="$(tput setaf 3)"   # Yellow
	coldefault="$(tput op)"        # Restore default
else
	colheader=
	colauthor=
	colcommitter=
	colfiles=
	colsignoff=
	coldefault=
fi

list_files=
if [ "$1" = "-f" ]; then
	shift
	list_files=1
fi

list_commit_files()
{
	tree1="$1"
	tree2="$2"
	sep="    * $colfiles"
	# List all files for for the initial commit
	if [ -z $tree2 ]; then
		list_cmd="git-ls-tree $tree1"
	else
		list_cmd="git-diff-tree -r $tree1 $tree2"
	fi
	echo
	$list_cmd | while read modes type sha1s file; do
		echo -n "$sep$file"
		sep=", "
	done
	echo "$coldefault:"
}

if echo "$1" | grep -q ':'; then
	id1=$(commit-id $(echo "$1" | cut -d : -f 1)) || exit 1
	id2=$(commit-id $(echo "$1" | cut -d : -f 2)) || exit 1
	revls="git-rev-tree $id2 ^$id1"
	revsort="sort -rn"
	revfmt="git-rev-tree"
else
	id1="$(commit-id $1)" || exit 1
	revls="git-rev-list $id1"
	revsort="cat"
	revfmt="git-rev-list"
fi

$revls | $revsort | while read time commit parents; do
	tree1=
	tree2=
	[ "$revfmt" = "git-rev-list" ] && commit="$time"
	echo $colheader""commit ${commit%:*} $coldefault;
	git-cat-file commit $commit | \
		while read key rest; do
			case "$key" in
			"author"|"committer")
				if [ "$key" = "author" ]; then
					color="$colauthor"
				else
					color="$colcommitter"
				fi

				date=(${rest#*> })
				pdate="$(showdate $date)"
				if [ "$pdate" ]; then
					echo -n $color$key $rest | sed "s/>.*/> $pdate/"
					echo $coldefault
				else
					echo $color$key $rest $coldefault
				fi
				;;
			"tree"|"parent")
				if [ -z $tree1 ]; then
					tree1=$rest
				elif [ -z $tree2 ]; then
					tree2=$rest
				fi
				echo $colheader$key $rest $coldefault
				;;
			"")
				if [ -n "$list_files" ]; then
					list_commit_files "$tree1" "$tree2"
				fi
				echo; sed -re '
					/ *Signed-off-by:.*/Is//'$colsignoff'&'$coldefault'/
					/ *Acked-by:.*/Is//'$colsignoff'&'$coldefault'/
					s/./    &/
				'
				;;
			*)
				echo $colheader$key $rest $coldefault
				;;
			esac

		done
	echo
done | ${PAGER:-less} ${PAGER_FLAGS:--R}
