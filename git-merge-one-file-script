#!/bin/sh
#
# Copyright (c) Linus Torvalds, 2005
#
# [This script is an example script of the Linus' git and not part of
# git-pasky.]
#
# This is the per-file merge script, called with
#
#   $1 - original file SHA1 (or empty)
#   $2 - file in branch1 SHA1 (or empty)
#   $3 - file in branch2 SHA1 (or empty)
#   $4 - pathname in repository
#
#
# Handle some trivial cases.. The _really_ trivial cases have
# been handled already by read-tree, but that one doesn't
# do any merges that migth change the tree layout
#

case "${1:-.}${2:-.}${3:-.}" in
#
# deleted in both, or deleted in one and unchanged in the other
#
"$1.." | "$1.$1" | "$1$1.")
	rm -f -- "$4"
	update-cache --remove -- "$4"
	exit 0
	;;

#
# added in one, or added identically in both
#
".$2." | "..$3" | ".$2$2")
	mv $(unpack-file "${2:-$3}") $4
	update-cache --add -- $4
	exit 0
	;;

#
# Modified in both, but differently ;(
#
"$1$2$3")
	echo "Auto-merging $4"
	orig=$(unpack-file $1)
	src1=$(unpack-file $2)
	src2=$(unpack-file $3)
	merge "$src2" "$orig" "$src1" || (echo Leaving conflict merge in $src2 && exit 1)
	(cp "$src2" "$4" && update-cache --add -- "$4") || (echo "Choosing $src2 -> $4 failed" && exit 1)
	exit 0
	;;

*)
	echo "Not handling case $1 -> $2 -> $3"
	;;
esac
exit 1
