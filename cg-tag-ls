#!/usr/bin/env bash
#
# List existing tags
# Copyright (c) Steve Hoelzer 2005
# Copyright (c) Petr Baudis 2006
#
# This command takes no arguments, and lists all tags in a given repository
# in alphabetical order, along with their corresponding SHA1 hash IDs.
#
# OUTPUT FORMAT
# -------------
# The first column contains flag letters. The 'S' flag means that the tag is
# GPG-signed, the '%' flag means that this is a "direct tag" (does not point
# to a tag object; this is now considered deprecated and you might have trouble
# distributing the tag to others). The '!' flag means that the tag is broken
# and points to a non-existing object.
#
# The second column shows the tag name, the third column its (abbreviated)
# object id and the fourth column the first line of tag description,
# if applicable.

# Testsuite: TODO

USAGE="cg-tag-ls"
_git_wc_unneeded=1

. "${COGITO_LIB}"cg-Xlib || exit 1

msg_no_tags="no tags present, please see cg-tag(1)"

[ -d "$_git/refs/tags" ] || die "$msg_no_tags"

[ "$(find "$_git/refs/tags" -follow -type f)" ] \
       || die "$msg_no_tags"

maxlen="$(git-for-each-ref --format="%(refname)" refs/tags | column_width "refs/tags/")"

# %(content) and %(body) is broken for tags in git-1.4.4

git-for-each-ref --format="%(refname) %(objectname) %(subject)" refs/tags |
while read tag sha1 title; do 
	flag=" "
	name="${tag#refs/tags/}"

	type="$(git-cat-file -t "$sha1" 2>/dev/null)" || flag="!"
	if [ "$type" = "tag" ]; then
		git-cat-file tag "$sha1" | grep -q '^-----BEGIN PGP SIGNATURE-----' && flag="S"
	elif [ "$type" ]; then
		flag="%"
	fi

	columns_print "$flag " - "$name" $maxlen "  ${sha1:0:12}~" - " $title" -
done
