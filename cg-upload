#!/usr/bin/env bash
#
# Upload changes to a remote GIT repository.
# Copyright (c) Petr Baudis, 2005.
#
# It will upload your commits to the remote repository, provided that
# your commits follow the last commit in the remote repository.
# Note that if the remote repository is associated with a working
# tree copy, this command won't update that. Use cg-reset at the
# remote side to bring it in sync (but throw away any local changes
# in that tree).
#
# Takes the branch name as an argument, defaulting to "origin".

USAGE="cg-upload [BRANCH_NAME]"

. ${COGITO_LIB}cg-Xlib || exit 1
deprecated_alias cg-upload cg-push

while optparse; do
	optfail
done

name=${ARGS[0]}

[ "$name" ] || { [ -s $_git/refs/heads/origin ] && name=origin; }
[ "$name" ] || die "where to upload to?"
uri=$(cat "$_git/branches/$name" 2>/dev/null) || die "unknown branch: $name"

rembranch=master
sprembranch=
if echo "$uri" | grep -q '#'; then
	rembranch=$(echo $uri | cut -d '#' -f 2)
	sprembranch=":$rembranch"
	uri=$(echo $uri | cut -d '#' -f 1)
fi

if echo "$uri" | grep -q "^http://"; then
	die "uploading over HTTP not supported yet"
elif echo "$uri" | grep -q "^git+ssh://"; then
	git-send-pack "$(echo "$uri" | sed 's#^git+ssh://\([^/]*\)\(/.*\)$#\1:\2#')" $_git_head$sprembranch
elif echo "$uri" | grep -q ":"; then
	die "uploading over rsync not supported"
else
	remgit="$uri"; [ -d "$remgit/.git" ] && remgit="$remgit/.git"
	if is_same_repo "$_git_objects" "$remgit/objects"; then
		remid="$(cat "$remgit"/refs/heads/$rembranch)" || die "$remgit: no branch $master"
		if [ "$remid" != "$(git-merge-base "$remid" "$(cg-commit-id)")" ]; then
			echo "ERROR: Remote '$rembranch' has some changes you don't have in your '$_git_head'" >&2
			echo "Try to cg-update from it first, then upload." >&2
			exit 1
		fi

		[ -x "$remgit/hooks/update" ] && "$remgit/hooks/update" "$rembranch" "$remid" "$(cg-commit-id)"
		cg-commit-id >"$remgit"/refs/heads/$rembranch
		[ -x "$remgit/hooks/post-update" ] && "$remgit/hooks/post-update" "$rembranch"
	else
		git-send-pack "$uri" $_git_head$sprembranch
	fi
fi
