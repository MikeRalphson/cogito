git-fetch-pack(1)
=================
v0.1, July 2005

NAME
----
git-fetch-pack - Receive missing objects from another repository.


SYNOPSIS
--------
git-fetch-pack [-q] [--exec=<git-upload-pack>] [<host>:]<directory> [<head>...] < <commit-list>

DESCRIPTION
-----------
Invokes 'git-upload-pack' on a potentially remote repository,
and asks it to send objects missing from this repository, to
update the named heads.  The list of commits available locally
is fed from the standard input, to be sent to 'git-upload-pack'
running on the other end.

This command can be used only when the local side has a common
(ancestor) commit with the remote head that is being pulled
from.  Use 'git-clone-pack' for that.


OPTIONS
-------
-q::
	Pass '-q' flag to 'git-unpack-objects'; this makes the
	cloning process less verbose.

--exec=<git-upload-pack>::
	Use this to specify the path to 'git-upload-pack' on the
	remote side, if is not found on your $PATH.
	Installations of sshd ignores the user's environment
	setup scripts for login shells (e.g. .bash_profile) and
	your privately installed GIT may not be found on the system
	default $PATH.  Another workaround suggested is to set
	up your $PATH in ".bashrc", but this flag is for people
	who do not want to pay the overhead for non-interactive
	shells by having a lean .bashrc file (they set most of
	the things up in .bash_profile).

<host>::
	A remote host that houses the repository.  When this
	part is specified, 'git-upload-pack' is invoked via
	ssh.

<directory>::
	The repository to sync from.

<head>...::
	The remote heads to update from. This is relative to
	$GIT_DIR (e.g. "HEAD", "refs/heads/master").  When
	unspecified, update from all heads the remote side has.

	However the program refuses to work if more than one
	remote head matches the specified heads.  I am not sure
	what this means... Help!!!!!


Author
------
Written by Linus Torvalds <torvalds@osdl.org>

Documentation
--------------
Documentation by Junio C Hamano.

GIT
---
Part of the link:git.html[git] suite
