#!/bin/sh
#
# [This script is an example script of the Linus' git and not part of
# git-pasky.]
#
# use "$1" or something in a real script, this 
# just hard-codes it.
#
merge_repo=$1

rm -f .git/MERGE_HEAD

echo "Getting object database"
rsync -avz --ignore-existing $merge_repo/objects/. .git/objects/.

echo "Getting remote head"
rsync -L $merge_repo/HEAD .git/MERGE_HEAD || exit 1

head=$(cat .git/HEAD)
merge_head=$(cat .git/MERGE_HEAD)
common=$(merge-base $head $merge_head)
if [ -z "$common" ]; then
	echo "Unable to find common commit between" $merge_head $head
	exit 1
fi

# Get the trees associated with those commits
common_tree=$(cat-file commit $common | sed 's/tree //;q')
head_tree=$(cat-file commit $head | sed 's/tree //;q')
merge_tree=$(cat-file commit $merge_head | sed 's/tree //;q')

if [ "$common" == "$merge_head" ]; then
	echo "Already up-to-date. Yeeah!"
	exit 0
fi
if [ "$common" == "$head" ]; then
	echo "Updating from $head to $merge_head."
	echo "Destroying all noncommitted data!"
	echo "Kill me within 3 seconds.."
	sleep 3
	read-tree -m $merge_tree && checkout-cache -f -a && update-cache --refresh
	echo $merge_head > .git/HEAD
	exit 0
fi
echo "Trying to merge $merge_head into $head"
read-tree -m $common_tree $head_tree $merge_tree
result_tree=$(write-tree) || exit 1
result_commit=$(echo "Merge $merge_repo" | commit-tree $result_tree -p $head -p $merge_head)
echo "Committed merge $result_commit"
echo $result_commit > .git/HEAD
checkout-cache -f -a && update-cache --refresh
