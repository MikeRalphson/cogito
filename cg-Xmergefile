#!/usr/bin/env bash
#
# Merge two files.
# Copyright (c) Linus Torvalds, 2005
#
# This is the git per-file merge script, called with
#
#   $1 - original file SHA1 (or empty)
#   $2 - file in branch1 SHA1 (or empty)
#   $3 - file in branch2 SHA1 (or empty)
#   $4 - pathname in repository
#   $5 - orignal file mode (or empty)
#   $6 - file in branch1 mode (or empty)
#   $7 - file in branch2 mode (or empty)
#
# We are designed to merge $3 _to_ $2, so we will give it
# a preference.
#
#
# Handle some trivial cases.. The _really_ trivial cases have
# been handled already by git-read-tree, but that one doesn't
# do any merges that might change the tree layout.
#

. ${COGITO_LIB}cg-Xlib


error () {
	echo "MERGE ERROR: $@" >&2
	return 1
}

warning () {
	echo "MERGE WARNING: $@" >&2
}


case "${1:-.}${2:-.}${3:-.}" in
#
# Deleted in both or deleted in one and unchanged in the other
#
"$1.." | "$1.$1" | "$1$1.")
	#echo "Removing $4"
	if test -f "$4"; then
		rm -f -- "$4"
	fi &&
		exec git-update-cache --remove -- "$4"
	;;

#
# Added in one.
#
".$2." | "..$3" )
	#echo "Adding $4"
	git-update-cache --add --cacheinfo "$6$7" "$2$3" "$4" &&
		exec git-checkout-cache -u -f -- "$4"
	;;

#
# Added in both (check for same permissions).
#
".$3$2")
	#echo "Adding $4"
	git-update-cache --add --cacheinfo "$6" "$2" "$4" &&
		git-checkout-cache -u -f -- "$4"
	ret=$?
	if [ "$6" != "$7" ]; then
		error "$4: added in both branches, permissions conflict $6->$7"
		exit 1
	fi
	exit $ret
	;;

#
# Modified in both, but differently.
#
"$1$2$3")
	echo "... Auto-merging $4"
	orig=$(git-unpack-file $1)
	src2=$(git-unpack-file $3)

	# We reset the index to the first branch, making
	# git-diff-file useful
	git-update-cache --add --cacheinfo "$6" "$2" "$4"
		git-checkout-cache -u -f -- "$4" &&
		merge "$4" "$orig" "$src2"
	ret=$?
	rm -f -- "$orig" "$src2"

	if [ "$6" != "$7" ]; then
		error "Permissions conflict: $5->$6,$7."
		ret=1
	fi

	if [ $ret -ne 0 ]; then
		# The user already gets the warning from merge itself and
		# from merge-cache too. This is too much.
		#error "Auto-merge failed"
		exit 1
	fi
	exec git-update-cache -- "$4"
	;;

*)
	error "$4: Not handling case $1 -> $2 -> $3"
	;;
esac
exit 1
