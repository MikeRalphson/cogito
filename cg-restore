#!/usr/bin/env bash
#
# Restore removed/changed files in the working tree.
# Copyright (c) Petr Baudis, 2005
#
# Restore given files to their original state.  It recovers any files
# (or files passed as arguments to the command, respectively) removed
# locally whose removal was not recorded by `cg-rm`.
#
# If passed the -f parameter, it restores the files to their state
# as of the last commit (including bringing files removed with
# `cg-rm` back to life; FIXME: does not do that part yet).
#
# This command is complementary to the `cg-reset` command, which
# forcefully abandons all the changes in the working tree and
# restores everything to a proper state (including unseeking,
# cancelling merge in progress and rebuilding indexes).
#
# OPTIONS
# -------
# -f::
#	Restore even locally modified files to the version as of
#	the last commit. Take care!

USAGE="cg-restore [-f] [FILE]..."

. ${COGITO_LIB}cg-Xlib || exit 1

force=
while optparse; do
	if optparse -f; then
		force=-f
	else
		optfail
	fi
done

ret=0

if [ "$ARGS" ]; then
	for file in "${ARGS[@]}"; do
		git-checkout-index $force "${_git_relpath}$file" || ret=1
	done
else
	[ "$_git_relpath" ] && die "cannot restore files en masse in subdirectories yet"
	if [ "$(git-ls-files --deleted)" ]; then
		echo "Recovering files:"
		git-ls-files --deleted | sed "s/^/$(echo -e "\t")/"
	fi
	git-checkout-index -q -a $force
fi

update_index || ret=1

exit $ret
